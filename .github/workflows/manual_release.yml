name: manual_release


on:

  workflow_dispatch:
    inputs:
      version:
        description: Número de versión del pre-release a liberar.
        required: true
        type: string

concurrency: production

jobs:
  
  Release:
    if: ${{ failure() }}
    uses: test-org-123fdfsd/test-sam-cicd/.github/workflows/reusable_deploy.yml@main
    with:
      ambiente: "production"
      ref: "${{github.event.inputs.version}}"
      region: us-west-2
    secrets:
      PROD_AWS_KEY_ID: ${{ secrets.VISOR_DEV_AWS_KEY_ID}}
      PROD_AWS_KEY_SECRET: ${{ secrets.VISOR_DEV_AWS_KEY_SECRET}}
      PROD_AWS_ACCOUNT_ID: ${{ secrets.VISOR_DEV_AWS_ACCOUNT_ID}}
      PROD_AWS_KMS: ${{ secrets.VISOR_DEV_AWS_KMS}}

  CreateRelease:
    #needs: Release
    permissions: write-all
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      
      - name: "Validar número de versión"
        run: |
          echo "Version ${{github.event.inputs.version}}"
          [[ "${{github.event.inputs.version}}" =~ ^([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*).*$ ]] && echo "Correcto" || exit 1
          echo "Validando si existe el pre-release"
          ! git tag ${{github.event.inputs.version}}
      
      - name: "Configurar Git"
        run: |
          git config --global user.name 'Github'
          git config --global user.email 'workflow@noreply.github.com'
          git branch --show-current
          git fetch
          git branch -a --contains tags/${{github.event.inputs.version}}
          BRANCH=$(git branch -a --contains tags/${{github.event.inputs.version}})          
          echo "BRANCH="${BRANCH:17:30}"" >> $GITHUB_ENV 
          
      - name: "Crear rama release"
        run: |
          git checkout -b releases/${{github.event.inputs.version}}
          git push origin releases/${{github.event.inputs.version}}

      - name: "Eliminar rama de fix"
        run: |
          
          if [[ ${{env.BRANCH}} == "fix/"${{github.event.inputs.version}} ]]; then \
          git push origin --delete fix/${{github.event.inputs.version}}; fi

      # Se actualiza el release marcado como pre-release
      - name: Release
        run: |
          gh release delete ${{github.event.inputs.version}} -y
          gh release create ${{github.event.inputs.version}} --title ${{github.event.inputs.version}} -F CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
